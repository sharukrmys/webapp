spring:
  application:
    name: multi-module-spring-boot
  datasource:
    master:
      url: jdbc:postgresql://localhost:5432/master_db
      username: ${DB_USERNAME:postgres}
      password: ${DB_PASSWORD:postgres}
      driver-class-name: org.postgresql.Driver
      hikari:
        connection-timeout: 30000
        idle-timeout: 600000
        max-lifetime: 1800000
        maximum-pool-size: 10
        minimum-idle: 5
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    show-sql: false
  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD:}
    timeout: 10000
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 2
        max-wait: -1
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    consumer:
      group-id: ${spring.application.name}
      auto-offset-reset: earliest
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
  cloud:
    openfeign:
      client:
        config:
          default:
            connectTimeout: 5000
            readTimeout: 5000
            loggerLevel: full

server:
  port: 8080
  servlet:
    context-path: /api

aws:
  region: ${AWS_REGION:us-east-1}
  s3:
    enabled: true
  sqs:
    enabled: true
  secretsmanager:
    enabled: true

services:
  data:
    url: ${DATA_SERVICE_URL:http://localhost:8081/api}
  attachment:
    url: ${ATTACHMENT_SERVICE_URL:http://localhost:8082/api}
  metadata:
    url: ${METADATA_SERVICE_URL:http://localhost:8083/api}
  user-management:
    url: ${USER_MANAGEMENT_SERVICE_URL:http://localhost:8084/api}
  report:
    url: ${REPORT_SERVICE_URL:http://localhost:8085/api}
  audit:
    url: ${AUDIT_SERVICE_URL:http://localhost:8086/api}

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
      probes:
        enabled: true
      group:
        readiness:
          include: db,redis
        liveness:
          include: ping

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method
    tagsSorter: alpha
    disable-swagger-default-url: true

logging:
  level:
    root: INFO
    com.example: DEBUG
    org.springframework: INFO
    org.hibernate: INFO
    # Enable Feign client logging
    com.example.applib.client: DEBUG

