plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.4' apply false
    id 'io.spring.dependency-management' version '1.1.4' apply false
    id 'com.diffplug.spotless' version '6.25.0' apply false
    id 'jacoco'
}

allprojects {
    group = 'com.example'
    version = '0.0.1-SNAPSHOT'
    
    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'com.diffplug.spotless'
    apply plugin: 'jacoco'
    
    java {
        sourceCompatibility = '17'
        targetCompatibility = '17'
    }
    
    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:2023.0.0"
        }
    }
    
    dependencies {
        // Spring Boot
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        
        // Lombok
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        
        // Testing
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'org.junit.jupiter:junit-jupiter-api'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
        testImplementation 'org.mockito:mockito-core'
        testImplementation 'org.mockito:mockito-junit-jupiter'
    }
    
    test {
        useJUnitPlatform()
        finalizedBy jacocoTestReport
    }
    
    jacocoTestReport {
        dependsOn test
        reports {
            xml.required = true
            html.required = true
        }
    }
    
    spotless {
        java {
            importOrder()
            removeUnusedImports()
        }
    }
    
    tasks.named('bootJar') {
        enabled = false
    }
    
    tasks.named('jar') {
        enabled = true
    }
}

